# © 2006, 2007, 2008 Adobe Systems Incorporated. All rights reserved.
# This material is furnished for informational use only, and is subject to change without notice.
# Preliminary PDFXML File Format Schema
# Schema Datestamp 2008/09/15

# RelaxNG Schema
# Based on RelaxNG Compact Syntax

namespace xsd="http://www.w3c.org/2001/XMLSchema-datatypes"
default namespace pdf="http://ns.adobe.com/pdf/2006"
grammar {
start = array_of_markup_annotation_file

number = xsd:float
number |= xsd:integer
fixed = number
name = xsd:string
boolean = xsd:boolean
rgb_color_array = xsd:string  # string if of form #xxxxxx or a series of numbers
integer = xsd:integer
object_reference = xsd:string
date = xsd:date
null = empty
pdf_text_string = string
pdf_byte_string = string
pdf_ascii_string = string
pdf_base64_string = string
pdf_reference = string
pdf_text_name = string
pdf_xml_name = string
any = element * { (attribute * { text } | text | any)* }

default_dictionary =           element * { default_dict_element}*
default_array =              default_array_element*
default_array_element = 
      element Dict { default_dictionary }
default_array_element |= 
      element Stream { array_stream_object }
default_array_element |= 
      element Array { default_array }
default_array_element |=  element String { attribute Value { pdf_byte_string } & attribute Value_enc {token}? }

default_array_element |= 
      element Null { null }
default_array_element |= 
      element Name { 
      attribute Value { name } & attribute Value_enc {token}? }
default_array_element |= 
      element Int { 
      attribute Value { integer }}
default_array_element |= 
      element Number { 
      attribute Value { fixed }}
default_array_element |= 
      element Bool { 
      attribute Value { boolean }}
array_stream_object =     attribute src { string } & common_stream_dictionary

default_dict_element =      attribute type { "null" }

default_dict_element |=     attribute type { "string" } & attribute Value { pdf_byte_string } & attribute Value_enc { token }? 

default_dict_element |=     attribute type { "integer" } & attribute Value { integer } 

default_dict_element |=     attribute type { "number" } & attribute Value { number } 

default_dict_element |=     attribute type { "boolean" } & attribute Value { boolean } 

default_dict_element |=    attribute type { "name" } & attribute Value { name } & attribute Value_enc { token }?

default_dict_element |=    attribute type { "dictionary" } & element * { default_dict_element }*

default_dict_element |=    attribute type { "array" } & default_array_element*

default_dict_element |=    attribute type { "stream" } & attribute src { string } & common_stream_dictionary

rectangle_blank_sep =  list {number, number, number, number}
array_of_integer =       list { integer }
array_of_number =       list { number }
array_of_name = element Name { attribute Value { name } }*
rectangle_list =  list { number, ",", number, ",", number, ",", number}
array_of_markup_annotation_file = 
      element Annotations { array_of_markup_annotation_dictionary }
array_of_markup_annotation_dictionary =              markup_annotation_dictionary*
function_dictionary = 
      element SampledFunction { sampled_function_dictionary }
function_dictionary |= 
      element InterpolatedFunction { interpolated_function_dictionary }
function_dictionary |= 
      element StitchingFunction { stitching_function_dictionary }
function_dictionary |= 
      element PostscriptFunction { postscript_function_dictionary }
sampled_function_dictionary = 
      attribute Domain { array_of_number }
    & attribute Range { array_of_number }
    & attribute Size { array_of_integer }
    & attribute BitsPerSample { integer }
    & attribute Order { number }?
    & attribute Encode { array_of_number }?
    & attribute Decode { array_of_number }?
    &    attribute src { string } & common_stream_dictionary

interpolated_function_dictionary = 
      attribute Domain { array_of_number }
    & attribute Range { array_of_number }
    & attribute C0 { array_of_number }?
    & attribute C1 { array_of_number }?
    & attribute Exponent { number }
stitching_function_dictionary = 
      attribute Domain { array_of_number }
    & attribute Range { array_of_number }
    & element StitchingFunctions { array_of_function_dictionary }
    & attribute Bounds { array_of_number }
    & attribute Encode { array_of_number }
postscript_function_dictionary = 
      attribute Domain { array_of_number }
    & attribute Range { array_of_number }
    &    attribute src { string } & common_stream_dictionary

array_of_function_dictionary = 
      element Function { function_dictionary }*
file_spec_dictionary = file_spec_dictionary1

file_spec_dictionary1 = 
      attribute FSType { pdf_byte_string }?    & attribute FSType_enc { token }?
    & attribute Name { pdf_byte_string }    & attribute Name_enc { token }?
    & attribute UName { pdf_text_string }?
    & element FileId { array_of_2_strings }?
    & attribute Volatile { boolean }?
file_spec_dictionary1 &= embedded_file_stream_information_dictionary?

file_spec_dictionary1 &= 
      element RelatedFiles { file_spec_related_files }?
    & element Desc { pdf_text_string }?
    & element Collection { collection_item_dictionary_reference }?
    & element Thumbnail { thumbnail_image_dictionary }?
file_spec_dictionary |= 
      attribute Name { pdf_byte_string }    & attribute Name_enc { token }?
array_of_2_strings = 
      attribute PermanentId { pdf_byte_string }    & attribute PermanentId_enc { token }?
    & attribute ContentId { pdf_byte_string }    & attribute ContentId_enc { token }?
embedded_file_stream_information_dictionary = 
      element FileData { embedded_file_stream_dictionary }?
    & element UFileData { pdf_text_string }?
file_spec_related_files = 
      element FileData { embedded_file_stream_dictionary }
file_spec_related_files |= 
      element Files { related_files_array }
related_files_array =              related_files_array_element*
related_files_array_element = 
      element FileData { embedded_file_stream_dictionary }
related_files_array_element |= 
      element Name { attribute _enc {token}? & pdf_byte_string }
embedded_file_stream_dictionary = 
      attribute FileType { pdf_text_name }?
    & element Params { embedded_file_stream_parameter_dictionary }
    &    attribute src { string } & common_stream_dictionary

embedded_file_stream_parameter_dictionary = 
      attribute Size { integer }?
    & attribute CreationDate { date }?
    & attribute ModDate { date }?
    & element Mac { embedded_file_stream_parameter_mac_dictionary }?
    & attribute Checksum { pdf_base64_string }?
embedded_file_stream_parameter_mac_dictionary = 
      attribute FileType { integer }?
    & attribute Creator { integer }?
    & element ResFork { embedded_file_stream_dictionary }?
collection_item_dictionary_reference = collection_item_dictionary

collection_item_dictionary = 
      element Field { attribute Name { text }, collection_item_value }+
collection_item_value = 
      attribute Prefix { pdf_text_string }?
collection_item_value |=    attribute Value { pdf_text_string | number }, attribute type { "string" | "number" }

color_space = name

color_space |= color_space_array
color_space_array = CalGray_color_space_array
color_space_array |= CalRGB_color_space_array
color_space_array |= Lab_color_space_array
color_space_array |= ICC_profile_array
CalGray_color_space_array = 
      element CalGray { CalGray_color_space_dictionary }
CalGray_color_space_dictionary = 
      attribute WhitePoint { tristimulus_value }
    & attribute BlackPoint { tristimulus_value }?
    & attribute Gamma { number }?
tristimulus_value =  list {number, number, number}
gamma_value =  list {number, number, number}
CalRGB_color_space_array = 
      element CalRGB { CalRGB_color_space_dictionary }
CalRGB_color_space_dictionary = 
      attribute WhitePoint { tristimulus_value }
    & attribute BlackPoint { tristimulus_value }?
    & attribute Gamma { gamma_value }?
    & attribute Matrix { linear_interpretation_array }?
linear_interpretation_array =  list {number, number, number, number, number, number, number, number, number}
Lab_color_space_array = 
      element Lab { Lab_color_space_dictionary }
Lab_color_space_dictionary = 
      attribute WhitePoint { tristimulus_value }
    & attribute BlackPoint { tristimulus_value }?
    & attribute Range { lab_color_range }?
lab_color_range =  list {number, number, number, number}
ICC_profile_array = 
      element ICCBased { ICC_profile_stream_dictionary }
ICC_profile_stream_dictionary = 
      attribute Count { integer }
    & element Alternate { color_space }?
    & attribute Range { array_of_number }?
ICC_profile_stream_dictionary &= metadata_item

ICC_profile_stream_dictionary &=     attribute src { string } & common_stream_dictionary

metadata_item =  empty

colorant_dictionary = 
      element Colorant { attribute Name { text },  attribute Name_enc { token }?, separation_color_space }+
thumbnail_image_dictionary = 
      attribute Width { integer }
    & attribute Height { integer }
    & element ColorSpace { color_space }
    & attribute BitsPerComponent { integer }
    & element ColorSpaceMap { color_space_map }?
    &    attribute src { string } & common_stream_dictionary

color_space_map =       list { integer }
form_dictionary = 
      attribute Name { name }?    & attribute Name_enc { token }?
    & attribute LastModified { date }?
    & attribute BBox { rectangle_blank_sep }
    & attribute Matrix { coordinate_map_array }?
    & element Attributes { group_attributes_dictionary }?
    & element Ref { reference_dictionary }?
form_dictionary &= metadata_item

form_dictionary &= 
      element ApplicationDatasets { page_piece_dictionary }?
    & element OPI { opi_version_dictionary }?
    & element ContentGroup { oc_group_or_membership_dictionary }?
    & element MarkStyle { pdf_text_string }?
    & element Colorants { colorant_dictionary }?
    & attribute PCM { name }?    & attribute PCM_enc { token }?
    & element SeparationColorNames { array_of_name }?
    & element TrapRegions { trap_array_of_object_references }?
    & attribute TrapStyles { pdf_text_string }?
    & element Measure { measure_dictionary }?
form_dictionary &= common_stream_dictionary

form_dictionary &=  attribute src { string }
coordinate_map_array = list { number, number, number, number, number, number}
group_attributes_dictionary = 
      attribute Type { name }    & attribute Type_enc { token }?
    & element ColorSpace { color_space }?
    & attribute Isolated { boolean }?
    & attribute Knockout { boolean }?
reference_dictionary = 
      element File { file_spec_dictionary }
    & element Page { pdf_text_string }
    & element FileId { array_of_2_strings }?
oc_membership_dictionary = 
      element Groups { oc_group_dictionary_or_array }?
    & attribute VisibilityPolicy { name }?    & attribute VisibilityPolicy_enc { token }?
    & element Visibility { default_array }?
oc_group_dictionary_or_array = 
      element Group { 
      attribute ref { pdf_reference }}+
oc_group_dictionary_or_array |= 
      element Group { 
      attribute ref { pdf_reference }}
oc_group_or_membership_dictionary = 
      element Group { 
      attribute ref { pdf_reference }}
oc_group_or_membership_dictionary |= 
      element Membership { oc_membership_dictionary }
markup_annotation_dictionary = 
      element Text { text_annotation_dictionary }
markup_annotation_dictionary |= 
      element FreeText { free_text_annotation_dictionary }
markup_annotation_dictionary |= 
      element Line { line_annotation_dictionary }
markup_annotation_dictionary |= 
      element Square { shape_annotation_dictionary }
markup_annotation_dictionary |= 
      element Circle { shape_annotation_dictionary }
markup_annotation_dictionary |= 
      element Polygon { poly_annotation_dictionary }
markup_annotation_dictionary |= 
      element PolyLine { poly_annotation_dictionary }
markup_annotation_dictionary |= 
      element Highlight { text_markup_annotation_dictionary }
markup_annotation_dictionary |= 
      element Underline { text_markup_annotation_dictionary }
markup_annotation_dictionary |= 
      element Squiggly { text_markup_annotation_dictionary }
markup_annotation_dictionary |= 
      element StrikeOut { text_markup_annotation_dictionary }
markup_annotation_dictionary |= 
      element Caret { caret_annotation_dictionary }
markup_annotation_dictionary |= 
      element Stamp { stamp_annotation_dictionary }
markup_annotation_dictionary |= 
      element Ink { ink_annotation_dictionary }
markup_annotation_dictionary |= 
      element FileAttachment { file_attachment_annotation_dictionary }
markup_annotation_dictionary |= 
      element Sound { sound_annotation_dictionary }
markup_annotation_dictionary |= 
      element Redact { redaction_annotation_dictionary }
markup_annotation_dictionary |= 
      element Custom { custom_annotation_dictionary }
common_annotation_dictionary = 
      element Contents { pdf_text_string }?
    & attribute Rect { rectangle_list }
    & attribute Name { pdf_text_string }?
    & attribute ModDate { date_or_string }?
    & attribute Flags { ( list { "Invisible"? , "Hidden"? , "Print"? , "NoZoom"? , "NoRotate"? , "NoView"? , "ReadOnly"? , "Locked"? , "ToggleNoView"? , "LockedContents"?  } ) }?
    & element Appearance { appearance_dictionary }?
    & attribute AppearanceState { name }?    & attribute AppearanceState_enc { token }?
    & attribute Color { rgb_color_array }?
    & element ContentGroup { oc_group_or_membership_dictionary }?
    & element Border { border_style_dictionary }?
common_markup_annotation_dictionary = 
      attribute Title { pdf_text_string }?
    & element Popup { popup_annotation_dictionary }?
    & attribute Opacity { number }?
    & element RTContents { rt_string_or_stream }?
    & attribute CreationDate { date }?
    & attribute Subj { pdf_text_string }?
    & attribute InReplyTo { string }? 
    & attribute ReplyType { pdf_text_name }?
    & attribute Intent { pdf_text_name }?
    & element ExData { external_data_dictionary }?
external_data_dictionary = 
      attribute Subtype { pdf_text_name }
    & element Annotation3D { annotation_reference_or_name }?
    & element View3D {       attribute ref { pdf_reference }}?
    & element Annotation { annotation_reference_or_name }?
    & element View {       attribute ref { pdf_reference }}?
    & attribute Checksum { pdf_base64_string }?
    & element Measure {       attribute ref { pdf_reference }}?
annotation_reference_or_name = 
      attribute Name { pdf_byte_string }    & attribute Name_enc { token }?
annotation_reference_or_name |= 
      attribute ref { pdf_reference }
rt_string_or_stream = pdf_text_string

rt_string_or_stream |=     attribute src { string } & common_stream_dictionary

date_or_string = pdf_text_string

dash_array = 
      attribute On { number }
    & attribute Off { number }
text_annotation_dictionary = common_annotation_dictionary

text_annotation_dictionary &= common_markup_annotation_dictionary

text_annotation_dictionary &= 
      attribute Open { boolean }?
    & attribute IconName { name }?    & attribute IconName_enc { token }?
    & attribute State { pdf_text_string }?
    & attribute StateModel { pdf_text_string }?
free_text_annotation_dictionary = common_annotation_dictionary

free_text_annotation_dictionary &= common_markup_annotation_dictionary

free_text_annotation_dictionary &=  element DefaultAppearance {  attribute Font { text }, attribute TextSize{ number }?, attribute FillColorSpace {"Gray" | "RGB" | "CMYK"}?, attribute FillColor { number | list {number, number, number, number?}}?, attribute StrokeColorSpace {"Gray" | "RGB" | "CMYK"}?, attribute StrokeColor { number | list {number, number, number, number?}}?, attribute CharacterSpacing { number }?, attribute TextLeading { number }?, attribute TextMatrix { list {number, number, number, number, number, number} }?, attribute RenderMode { number }?, attribute TextRise { number }?, attribute WordSpacing { number }?, attribute HorizontalScaling { number }? } 
free_text_annotation_dictionary &= 
      attribute Justification { ( "Left" | "Centered" | "Right" ) }?
    & attribute DefaultStyle { pdf_text_string }?
    & ( attribute StartPoint { list {number, ",", number} } & attribute KneePoint { list {number, ",", number} }? & attribute EndPoint { list {number, ",", number} } )?
    & element BorderEffect { border_effect_dictionary }?
    & attribute Fringe { rectangle_blank_sep }?
    &  attribute Style { "Square" | "Circle" | "Diamond" | "OpenArrow" | "ClosedArrow" | "None" | "Butt" | "ROpenArrow" | "RClosedArrow" | "Slash" } ?

line_annotation_dictionary = common_annotation_dictionary

line_annotation_dictionary &= common_markup_annotation_dictionary

line_annotation_dictionary &=  attribute Start { list { number, number }}  &  attribute End { list { number, number } }

line_annotation_dictionary &= line_ends_array?

line_annotation_dictionary &= 
      attribute InteriorColor { rgb_color_array }?
line_annotation_dictionary &= number_or_array_of_2_numbers?

line_annotation_dictionary &= 
      attribute LeaderLineExtension { number }?
    & attribute Caption { boolean }?
    & attribute LeaderLineOffset { number }?
    & attribute CaptionPosition { pdf_ascii_string }?
    & element Measure { measure_dictionary }?
line_annotation_dictionary &= caption_offset_array?

number_or_array_of_2_numbers = 
      attribute LeaderLineLength { number }
caption_offset_array = 
      attribute CaptionOffsetX { number }
    & attribute CaptionOffsetY { number }
line_ends_array =   attribute HeadStyle { "Square" | "Circle" | "Diamond" | "OpenArrow" | "ClosedArrow" | "None" | "Butt" | "ROpenArrow" | "RClosedArrow" | "Slash" } ?

line_ends_array &=   attribute TailStyle { "Square" | "Circle" | "Diamond" | "OpenArrow" | "ClosedArrow" | "None" | "Butt" | "ROpenArrow" | "RClosedArrow" | "Slash" } ?

shape_annotation_dictionary = common_annotation_dictionary

shape_annotation_dictionary &= common_markup_annotation_dictionary

shape_annotation_dictionary &= 
      attribute InteriorColor { rgb_color_array }?
    & element BorderEffect { border_effect_dictionary }?
    & attribute Fringe { rectangle_list }?
poly_annotation_dictionary = common_annotation_dictionary

poly_annotation_dictionary &= common_markup_annotation_dictionary

poly_annotation_dictionary &= 
      attribute Path { vertices_array }
poly_annotation_dictionary &= line_ending_style_array?

poly_annotation_dictionary &= 
      attribute InteriorColor { rgb_color_array }?
    & element BorderEffect { border_effect_dictionary }?
    & element Measure { measure_dictionary }?
vertices_array =       list { number }
border_effect_dictionary = 
      attribute Style { ( "None" | "Cloudy" ) }?
    & attribute Intensity { number }?
line_ending_style_array = 
      attribute Head { name }    & attribute Head_enc { token }?
    & attribute Tail { name }    & attribute Tail_enc { token }?
text_markup_annotation_dictionary = common_annotation_dictionary

text_markup_annotation_dictionary &= common_markup_annotation_dictionary

text_markup_annotation_dictionary &= 
      attribute Coords { quadpoints_array }
quadpoints_array =       list { number }
caret_annotation_dictionary = common_annotation_dictionary

caret_annotation_dictionary &= common_markup_annotation_dictionary

caret_annotation_dictionary &= 
      attribute Fringe { rectangle_blank_sep }?
    & attribute Symbol { ( "paragraph" | "none" ) }?
stamp_annotation_dictionary = common_annotation_dictionary

stamp_annotation_dictionary &= common_markup_annotation_dictionary

stamp_annotation_dictionary &= 
      attribute IconName { name }?    & attribute IconName_enc { token }?
ink_annotation_dictionary = common_annotation_dictionary

ink_annotation_dictionary &= common_markup_annotation_dictionary

ink_annotation_dictionary &= 
      element Inklist { array_of_path }
array_of_path = 
      element Gesture { 
      attribute Points { path }}+
path =       list { number }
popup_annotation_dictionary = common_annotation_dictionary

popup_annotation_dictionary &= 
      attribute Open { boolean }?
file_attachment_annotation_dictionary = common_annotation_dictionary

file_attachment_annotation_dictionary &= common_markup_annotation_dictionary

file_attachment_annotation_dictionary &= 
      element File { file_spec_dictionary }
    & attribute IconName { name }?    & attribute IconName_enc { token }?
sound_annotation_dictionary = common_annotation_dictionary

sound_annotation_dictionary &= common_markup_annotation_dictionary

sound_annotation_dictionary &= 
      element SoundFile { sound_stream_dictionary }
    & attribute IconName { name }?    & attribute IconName_enc { token }?
redaction_annotation_dictionary = common_annotation_dictionary

redaction_annotation_dictionary &= 
      attribute Coords { quadpoints_array }?
    & attribute InteriorColor { rgb_color_array }?
    & element OverlayAppearance { form_dictionary }?
    & attribute OverlayText { pdf_text_string }?
    & attribute Repeat { boolean }?
    & element DefaultAppearance {  attribute Font { text }, attribute TextSize{ number }?, attribute FillColorSpace {"Gray" | "RGB" | "CMYK"}?, attribute FillColor { number | list {number, number, number, number?}}?, attribute StrokeColorSpace {"Gray" | "RGB" | "CMYK"}?, attribute StrokeColor { number | list {number, number, number, number?}}?, attribute CharacterSpacing { number }?, attribute TextLeading { number }?, attribute TextMatrix { list {number, number, number, number, number, number} }?, attribute RenderMode { number }?, attribute TextRise { number }?, attribute WordSpacing { number }?, attribute HorizontalScaling { number }? } 
    & attribute Justification { ( "Left" | "Centered" | "Right" ) }?
custom_annotation_dictionary = common_annotation_dictionary

custom_annotation_dictionary &= common_markup_annotation_dictionary

trap_array_of_object_references = 
      element Obj { 
      attribute ref { pdf_reference }}+
border_style_dictionary = 
      attribute Width { number }?
    & attribute Style { ( "Solid" | "Dash" | "Beveled" | "Inset" | "Underline" ) }?
border_style_dictionary &= dash_array?

appearance_dictionary = 
      element Normal { form_or_appearance_dictionary }
    & element Rollover { form_or_appearance_dictionary }?
    & element Down { form_or_appearance_dictionary }?
form_or_appearance_dictionary = 
      element Graphic { form_dictionary }
form_or_appearance_dictionary |= 
      element Graphics { appearance_subdictionary }
appearance_subdictionary = 
      element Graphic { attribute StateName { text }, form_dictionary }+
measure_dictionary = geospatial_measure_dictionary

measure_dictionary |= rectilinear_measure_dictionary

geospatial_measure_dictionary =   attribute Subtype { "GEO" }

geospatial_measure_dictionary &= 
      attribute Bounds { array_of_number }?
    & element CoordinateSystem { coordinate_system_dictionary }
    & element DisplayCoordinateSystem { coordinate_system_dictionary }?
    & element PreferredDisplayUnits { preferred_display_units_array }?
    & attribute GeoPoints { array_of_number }
    & attribute LocalPoints { array_of_number }?
coordinate_system_dictionary = 
      attribute Type { ( "Geographic" | "Projected" ) }
    & attribute EPSG { integer }?
    & attribute WellKnownText { pdf_ascii_string }?
preferred_display_units_array =   attribute Linear { "M" | "KM" | "FT" | "USFT" | "MI" | "NM" }

preferred_display_units_array &=   attribute Area { "SQM" | "HA" | "SQKM" | "SQFT" | "A" | "SQMI" }

preferred_display_units_array &=   attribute Angular { "DEG" | "GRD" }

rectilinear_measure_dictionary = 
      attribute ScaleRatio { pdf_text_string }
    & element X { number_format_array }
    & element Y { number_format_array }?
    & element Distance { number_format_array }
    & element Area { number_format_array }
    & element Angle { number_format_array }?
    & element Slope { number_format_array }?
    & element Origin { origin_array }?
    & attribute YtoXFactor { number }?
origin_array = 
      attribute X { number }
    & attribute Y { number }
number_format_array = 
      element Unit { number_format_dictionary }*
number_format_dictionary = 
      attribute UnitLabel { pdf_text_string }
    & attribute ConversionFactor { number }
    & attribute Fraction { ( "Decimal" | "Fraction" | "Round" | "Truncate" ) }?
    & attribute Precision { integer }?
    & attribute NoTruncate { boolean }?
    & attribute ThousandsDelimiter { pdf_text_string }?
    & attribute DecimalPoint { pdf_text_string }?
    & attribute LeftOfLabel { pdf_text_string }?
    & attribute AfterLabel { pdf_text_string }?
    & attribute LabelPosition { ( "Suffix" | "Prefix" ) }?
sound_stream_dictionary = 
      attribute SamplingRate { number }
    & attribute ChannelCount { integer }?
    & attribute BitsPerSample { integer }?
    & attribute Encoding { pdf_text_name }?
    & attribute Compression { name }?    & attribute Compression_enc { token }?
    &    attribute src { string } & common_stream_dictionary

colorspace_name_or_array = 
      attribute ColorSpaceName { name }    & attribute ColorSpaceName_enc { token }?
colorspace_name_or_array |= 
      element ColorSpace { color_space_array }
page_piece_dictionary = 
      element ApplicationData { attribute Owner { text }, application_data_dictionary }+
application_data_dictionary = 
      attribute LastModified { date }
    & element Private { default_dict_element }
color_space_array |= 
      element Separation { separation_color_space }
color_space_array |= 
      element DeviceN { device_n_color_space }
color_space_array |= 
      element Indexed { indexed_color_space }
color_space_array |= 
      element PatternCS { pattern_color_space }
separation_color_space = 
      attribute Colorant { name }    & attribute Colorant_enc { token }?
    & element AlternateSpace { color_space }
    & element TintXform { function_dictionary }
device_n_color_space = 
      element Colorants { array_of_name }
    & element AlternateSpace { color_space }
    & element TintXform { function_dictionary }
    & element Attrs { device_n_color_space_attributes_dictionary }?
pattern_color_space = 
      element UnderlyingSpace { color_space }?
device_n_color_space_attributes_dictionary = 
      element Colorants { colorant_dictionary }?
    & attribute Subtype { pdf_text_name }?
    & element Process { process_dictionary }?
    & element MixingHints { mixing_hints_dictionary }?
process_dictionary = 
      element ColorSpace { colorspace_name_or_array }
    & element Components { array_of_name }
mixing_hints_dictionary = 
      element Solidities { ink_density_dictionary }
    & element PrintingOrder { array_of_name }
ink_density_dictionary = element Density { number & attribute Name { pdf_byte_string }}

indexed_color_space = 
      element Base { color_space }
    & attribute HiVal { integer }
    & element LookupTable { lut_string_or_stream }
lut_string_or_stream = pdf_base64_string

lut_string_or_stream |=     attribute src { string } & common_stream_dictionary

opi_version_dictionary = 
      element OPI13 { opi_13_dictionary }?
    & element OPI20 { opi_20_dictionary }?
opi_13_dictionary = 
      element File { file_spec_dictionary }
    & attribute ID { pdf_byte_string }?    & attribute ID_enc { token }?
    & attribute Comments { pdf_text_string }?
    & element Size { opi_size_array }
    & element CropRect { opi_crop_rect_array }
    & element CropFixed { opi_crop_rect_array }?
    & element Position { opi_position_array }
    & element Resolution { opi_resolution_array }?
    & attribute ColorType { pdf_text_name }?
    & element Color { opi_cmyk_color_array }?
    & attribute Tint { number }?
    & element Overprint { boolean }?
    & element ImageType { opi_image_type_array }?
    & element GrayMap { opi_graymap_array }?
    & attribute Transparency { boolean }?
    & element Tags { opi_tags_array }?
opi_tags_array =              default_array_element*
opi_graymap_array =       list { integer }
opi_size_array = 
      attribute Width { integer }
    & attribute Height { integer }
opi_image_type_array = 
      attribute samples { integer }
    & attribute bits { integer }
opi_crop_rect_array = 
      attribute Left { number }
    & attribute Top { number }
    & attribute Right { number }
    & attribute Bottom { number }
opi_position_array = 
      attribute llx { number }
    & attribute lly { number }
    & attribute ulx { number }
    & attribute uly { number }
    & attribute urx { number }
    & attribute ury { number }
    & attribute lrx { number }
    & attribute lry { number }
opi_resolution_array = 
      attribute horizRes { integer }
    & attribute vertRes { integer }
opi_cmyk_color_array = 
      attribute C { number }
    & attribute M { number }
    & attribute Y { number }
    & attribute K { number }
    & attribute colorName { pdf_byte_string }    & attribute colorName_enc { token }?
opi_20_dictionary = 
      element File { file_spec_dictionary }
    & element MainImage { attribute _enc {token}? & pdf_byte_string }?
    & element Tags { opi_tags_array }?
    & element Size { opi_size_array }?
    & element CropRect { opi_crop_rect_array }?
    & element Overprint { boolean }?
    & element Inks { opi_ink_info }?
    & element Dimensions { opi_size_array }?
    & element IncludedImageQuality { number }?
opi_ink_info = name

opi_ink_info |=              default_array_element*
common_stream_dictionary = 
      element File { file_spec_dictionary }?
    & element FileFilters { filter_name_or_array }?
    & element FDecodeParms { parm_dictionary_or_array }?
parm_dictionary_or_array = 
      element ParmDictionary { parm_dictionary }*
parm_dictionary =           element * { default_dict_element}*
filter_name_or_array = 
      element Filter { attribute _enc {token}? & name }*
}
# end of schema
